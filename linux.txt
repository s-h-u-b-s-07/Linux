FILE SYSTEM MANAGEMENT :-


1)  List out 5 files in your system which consuming most of the disk space
	du . | sort -nr | head -n5  (Descending order)
	du . | sort -n | head -n5   (Ascending order)
	du -sh * | sort -nr | head -n5   (Descending in human readable format)
	du -sh * | sort -n | head -n5    (Ascending in human readable format)

2) Create one common folder in such way that anyone can create files inside that independently and should not be able to delete other users files from that common folder.
	chmod 777 bridgelabz    (others can only read and execute)


3) Create user name "shubham" and add that user in the group "adm"
      a) Create folder /data , change owner and group as  "root:adm
      b) Change /data permission such a way that user can able to write data in this folder and ownership of files or folder which you creates in this folder should be same as parent folder i.e /data folder permission (root:adm)

</>#
..      root  adm   /data

</data>#
rw_rw_r  root  adm test.txt


	sudo useradd shubham
	sudo useradd -g adm shubham
	id shubham
	
	ubuntu@ip-172-31-81-215:~$ sudo -i    (into root user)
	root@ip-172-31-81-215:~# mkdir /data  (created dir)
	root@ip-172-31-81-215:~# ll

	root@ip-172-31-81-215:~# cd /data  (change dir to /data)
	root@ip-172-31-81-215:/data#

	root@ip-172-31-81-215:/data# cd /
	root@ip-172-31-81-215:/# ls

	root@ip-172-31-81-215:/# chown root:adm data/    (ownership to root:adm)
	root@ip-172-31-81-215:/# chmod 664 data/    (file permission)

	root@ip-172-31-81-215:/# ll data/

	root@ip-172-31-81-215:/# cd data/
	root@ip-172-31-81-215:/data# touch test.txt

	root@ip-172-31-81-215:/data# ll

	root@ip-172-31-81-215:/data# chmod -R 664 test.txt
	root@ip-172-31-81-215:/data# ll

	root@ip-172-31-81-215:/data# chown root:adm test.txt
	root@ip-172-31-81-215:/data# ll


PROCESS MANAGEMENT :-

1)  List out highest priority process in the system
	
	ubuntu@ip-172-31-81-215:~$ ps -eo pid,ppid,cmd,%mem,%cpu,nice --sort=-nice | tail
	OR
	ubuntu@ip-172-31-81-215:~$ ps -o pri (not getting )
	OR
	ubuntu@ip-172-31-81-215:~$top
2) Open terminal with 2 tabs or sessions
    a)  run command "vmstat 1"
    b) switch to another tab,  pause  running vmstat command for few seconds and resume it again

use appropriate SIGNALS to do this activity.

	OPEN 2 SESSION OF COMMAND PROMPT
	ubuntu@ip-172-31-81-215:/$ sudo -i
	root@ip-172-31-81-215:/# vamstat 1 (1st  session)
	root@ip-172-31-81-215:/# vamstat 1 (2nd  session)
	root@ip-172-31-81-215:/# kill  1985

3)  Find the process which is sleeping in "wait" state. 
	ubuntu@ip-172-31-81-215:~$ ps -l   (to see processes associated with the current shell)
	F S   UID     PID    PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
	0 S  1000    1176    1175  0  80   0 -  2514 do_wai pts/2    00:00:00 bash
	0 R  1000    1218    1176  0  80   0 -  2636 -      pts/2    00:00:00 ps

	 If a process is in Sleep state, the WCHAN field shows the system call that the process is waiting on.


USER MANAGEMENT :-

1)  Create user "nikhil" with home directory set as "/home/nikhil"
       a) nikhil user should have "/bin/sh" shell for his environment
       b) His password should expire in 9 days and 2 days before password expiry, he should get warning. User account must expire in 1 month from creation date
       c) Give him root privileges to start/stop cron daemon.

	ubuntu@ip-172-31-81-215:~$ sudo useradd nikhil -m -s /bin/bash  (created user with home directory and default sheel /bib/bash)
	ubuntu@ip-172-31-81-215:/$ sudo chage -l nikhil       (List the password and its related details for an user)
	ubuntu@ip-172-31-81-215:~$ sudo chage -M 9 nikhil     (password expire in maximum 9 days)
	ubuntu@ip-172-31-81-215:~$ sudo chage -W 2 nikhil     (password change warning before 2 days)
	ubuntu@ip-172-31-81-215:~$ sudo chage -E 2022-03-23 nikhil   (user accout expire in one month [23 feb to 23 march])
	



2) Inside folder "/" , create new home directory as "nikhil" (/nikhil) and setup this folder as a home directory for user "nikhil"



MEMORY MANAGEMENT :-

1) Setup additional swap space in the system to solve low memory issue.  The swap which you added should be available post reboot.

	ubuntu@ip-172-31-81-215:/$ sudo -i	(into root user)
	root@ip-172-31-81-215:/# mkdir dir	(created directory)
	root@ip-172-31-81-215:/# cd dir		(into directory)
	root@ip-172-31-81-215:/#touch myswapfile	(file in directory)
	root@ip-172-31-81-215:/# dd if=/dev/zero of=/dir/myswapfile bs=1024 count=100		(directory/file   bs 1024byte memory block created  count=100 bytes)
	root@ip-172-31-81-215:/# ll /dir/myswapfile
	root@ip-172-31-81-215:/# mkswap /dir/myswapfile
	root@ip-172-31-81-215:/# swapon -s

2) Find out the number of process is in run queue and blocking queue
	ubuntu@ip-172-31-81-215:~$ ubuntu@ip-172-31-81-215:~$ vmstat 1



DISK PARTITION, FILE SYSTEM CREATION, MANAGEMENT AND MOUNTING :-

	attach 20 GB EBS volume

a) Create 2 primary partitions of 3 GB each
	ubuntu@ip-172-31-81-215:~$ sudo su -
	root@ip-172-31-81-215:~# lsblk
	root@ip-172-31-81-215:~# fdisk /dev/xvdf

	Command (m for help): n
	Partition type
   	p   primary (0 primary, 0 extended, 4 free)
   	e   extended (container for logical partitions)
	Select (default p): p
	Partition number (1-4, default 1):
	First sector (2048-41943039, default 2048):
	Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-41943039, default 41943039): +3G
	Command (m for help): n
	Select (default p): p
	Partition number (2-4, default 2):
	First sector (4196352-41943039, default 4196352):
	Last sector, +/-sectors or +/-size{K,M,G,T,P} (4196352-41943039, default 41943039): +3G
	Command (m for help): w
	The partition table has been altered.

b) Create 2 logical partitions of 6 GB each
	Command (m for help): n
	Partition type
   	p   primary (2 primary, 0 extended, 2 free)
   	e   extended (container for logical partitions)
	Select (default p): e
	Partition number (3,4, default 3):
	First sector (12584960-41943039, default 12584960):
	Last sector, +/-sectors or +/-size{K,M,G,T,P} (12584960-41943039, default 41943039): +13G

	Created a new partition 3 of type 'Extended' and of size 13 GiB.

	Command (m for help): n
	Partition type
   	p   primary (2 primary, 1 extended, 1 free)
   	l   logical (numbered from 5)
	Select (default p): l

	Adding logical partition 5
	First sector (12587008-37750783, default 12587008):
	Last sector, +/-sectors or +/-size{K,M,G,T,P} (12587008-37750783, default 37750783): +6G

	Created a new partition 5 of type 'Linux' and of size 6 GiB.

	Command (m for help): n
	Partition type
   	p   primary (2 primary, 1 extended, 1 free)
   	l   logical (numbered from 5)
	Select (default p): l

	Adding logical partition 6
	First sector (25171968-37750783, default 25171968):
	Last sector, +/-sectors or +/-size{K,M,G,T,P} (25171968-37750783, default 37750783): +6G

	Created a new partition 6 of type 'Linux' and of size 6 GiB.

	Command (m for help): w
	The partition table has been altered.
	Calling ioctl() to re-read partition table.
	Syncing disks.

c)  Format all 4 partitions and create ext4 filesystem on that
	root@ip-172-31-81-215:~# sudo mkfs -t ext4 /dev/xvdf
	root@ip-172-31-81-215:~# lsblk

d) Create 4 folders inside root ( / ) folder name it as Data1, Data2, Data3, Data4
	root@ip-172-31-81-215:~# cd /
	root@ip-172-31-81-215:/# mkdir Data1
	root@ip-172-31-81-215:/# mkdir Data2
	root@ip-172-31-81-215:/# mkdir Data3
	root@ip-172-31-81-215:/# mkdir Data4

e) Mount all formated partitions on the respective folders
	root@ip-172-31-81-215:/# mount /dev/xvdf1 /Data1
	root@ip-172-31-81-215:/# mount /dev/xvdf2 /Data2
	root@ip-172-31-81-215:/# mount /dev/xvdf3 /Data3
	root@ip-172-31-81-215:/# mount /dev/xvdf4 /Data4

f)  Create empty file inside each folders of size 2 GB, 2GB, 4 GB and 4 GB respectively  using  command -  dd - "convert and copy a file"

	root@ip-172-31-81-215:/Data1# dd if=/dev/zero of=empty1.txt bs=1024 count=2028k
	2076672+0 records in
	2076672+0 records out
	2126512128 bytes (2.1 GB, 2.0 GiB) copied, 30.4187 s, 69.9 MB/s

	root@ip-172-31-81-215:/# cd Data2
	root@ip-172-31-81-215:/Data2# dd if=/dev/zero of=empty2.txt bs=1024 count=2028k
	2076672+0 records in
	2076672+0 records out
	2126512128 bytes (2.1 GB, 2.0 GiB) copied, 30.6229 s, 69.4 MB/s

	root@ip-172-31-81-215:/# cd Data3
	root@ip-172-31-81-215:/Data3# dd if=/dev/zero of=empty2.txt bs=1024 count=4096k
	4194304+0 records in
	4194304+0 records out
	4294967296 bytes (4.3 GB, 4.0 GiB) copied, 66.2602 s, 64.8 MB/s

	root@ip-172-31-81-215:/# cd Data4
	root@ip-172-31-81-215:/Data4# dd if=/dev/zero of=empty2.txt bs=1024 count=4096k
	4194304+0 records in
	4194304+0 records out
	4294967296 bytes (4.3 GB, 4.0 GiB) copied, 66.4694 s, 64.6 MB/s

g) Go inside /Data1  and run  command -  while(true); do sleep 5s; done  , do ctrl-z
	root@ip-172-31-81-215:/# cd Data1
	root@ip-172-31-81-215:/Data1# while(true); do sleep 5s; done
	^Z
	[1]+  Stopped                 sleep 5s

h) Check disk utilization of each mount point
	root@ip-172-31-81-215:/Data1# df
	root@ip-172-31-81-215:/Data2# df
	root@ip-172-31-81-215:/Data3# df
	root@ip-172-31-81-215:/Data4# df

i)  Unmount all partitions /Data1, /Data2, /Data3 and /Data4
	root@ip-172-31-81-215:/# umount data1
	root@ip-172-31-81-215:/# umount data2
	root@ip-172-31-81-215:/# umount data3
	root@ip-172-31-81-215:/# umount data4
	
	

	
	
	




	
	

